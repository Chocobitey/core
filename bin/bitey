#!/usr/bin/env ruby
require 'fileutils'
require 'open3'
require 'json'
require 'net/http'
require 'uri'

# --- Config ---
BITEY_ROOT = "/opt/bitey"
PROGRAMS_DIR = "#{BITEY_ROOT}/programs"
GHCR_BASE = "https://ghcr.io/v2"
PACKAGE_INDEX_BASE = "https://raw.githubusercontent.com/Chocobitey/db/main/docs"

# --- Helpers ---

def sh(cmd)
  puts "🛠️  #{cmd}"
  system(cmd) || abort("❌ Command failed: #{cmd}")
end

def download_package(user, repo, package, version)
  url = "#{GHCR_BASE}/#{user}/#{repo}/#{package}/#{package}-#{version}.choco.pkg"
  dest = "/tmp/#{package}-#{version}.choco.pkg"
  puts "📦 Downloading #{url}..."
  sh("curl --progress-bar -L #{url} -o #{dest}")
  dest
end

def install_package(archive, package)
  target = "#{PROGRAMS_DIR}/#{package}"
  FileUtils.mkdir_p(target)
  puts "🚀 Installing..."
  sh("tar -xzf #{archive} -C #{target}")
  sh("chmod +x #{target}/bin/*")
end

def fetch_latest_version(user, repo, package)
  url = URI("#{GHCR_BASE}/#{user}/#{repo}/#{package}/tags/list")
  res = Net::HTTP.get_response(url)

  unless res.is_a?(Net::HTTPSuccess)
    abort("❌ Failed to fetch tags: #{res.code} #{res.message}")
  end

  tags = JSON.parse(res.body)["tags"] || []
  abort("❌ No versions found for #{package}") if tags.empty?

  latest = tags.sort_by { |v| Gem::Version.new(v.gsub(/[^\d.]/, '')) rescue v }.last
  latest
end

def fetch_package_metadata(name)
  url = URI("#{PACKAGE_INDEX_BASE}/#{name}.json")

  res = Net::HTTP.get_response(url)
  unless res.is_a?(Net::HTTPSuccess)
    abort("❌ Package '#{name}' not found.")
  end

  JSON.parse(res.body)
end


# --- Main Logic ---

if ARGV[0] == "install" && ARGV[1]
  pkgname = ARGV[1]        # e.g., "hello"
  version = ARGV[2]

  metadata = fetch_package_metadata(pkgname)

  user = metadata["user"]
  repo = metadata["repo"]
  name = metadata["name"] || pkgname

  version ||= fetch_latest_version(user, repo, name)

  puts "🐶 Installing #{name} v#{version}..."
  FileUtils.mkdir_p(PROGRAMS_DIR)
  file = download_package(user, repo, name, version)
  install_package(file, name)
  puts "🍫 Done! Bitzy fetched you a treat."

else
  puts <<~USAGE
    🍫 Bitey 1.0.0 — Chocobitey Package Manager
    Usage:
      bitey install <user>/<repo>/<package> [version]
  USAGE
end
